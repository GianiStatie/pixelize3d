[gd_resource type="ShaderMaterial" load_steps=2 format=3 uid="uid://b0fqxh3fu6emh"]

[sub_resource type="Shader" id="Shader_4u2f0"]
code = "shader_type canvas_item;

uniform sampler2D view : repeat_disable, filter_nearest;
uniform float limit = 32.0;
uniform float thresh = 0.5;

void fragment(){
	float offset = 0.5/limit;
	 vec4 scr = texture(view,UV);
	scr.r = float(int(scr.r*limit+offset))/limit;
	scr.b = float(int(scr.b*limit+offset))/limit;
	scr.g = float(int(scr.g*limit+offset))/limit;
	float alpha = scr.a;
	if (alpha < thresh){
		alpha = 0.0;
	}
	else {
		alpha = 1.0;
	}
	
	
	
	COLOR.rgb = scr.rgb;
	COLOR.a = alpha;
}"
metadata/_edit_res_path = "res://materials/no_palette_shader_material.tres::Shader_4u2f0"

[resource]
resource_local_to_scene = true
shader = SubResource("Shader_4u2f0")
shader_parameter/limit = 32.0
shader_parameter/thresh = 0.5
